# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UI.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtGui import QPixmap
from PyQt5.QtWidgets import QGraphicsPixmapItem

import graph_model.graph as g


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(900, 542)
        Dialog.setMinimumSize(QtCore.QSize(900, 480))
        Dialog.setMaximumSize(QtCore.QSize(1280, 720))
        self.listView = QtWidgets.QListView(Dialog)
        self.listView.setGeometry(QtCore.QRect(10, 401, 871, 121))
        self.listView.setStyleSheet("    background-image: url(./UI/background.jpg);\n"
                                    "    background-position: center;\n"
                                    "    background-repeat: no-repeat;\n"
                                    "    background-attachment: fixed; \n"
                                    "    background-size: contain;")
        self.listView.setObjectName("listView")
        self.textBrowser = QtWidgets.QTextBrowser(Dialog)
        self.textBrowser.setGeometry(QtCore.QRect(650, 240, 221, 151))
        self.textBrowser.setObjectName("textBrowser")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(263, 135, 93, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        self.graphicsView = QtWidgets.QGraphicsView(Dialog)
        self.graphicsView.setGeometry(QtCore.QRect(380, 43, 224, 192))
        self.graphicsView.setObjectName("graphicsView")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(428, 15, 60, 16))
        self.label_2.setObjectName("label_2")
        self.graphicsView_2 = QtWidgets.QGraphicsView(Dialog)
        self.graphicsView_2.setGeometry(QtCore.QRect(650, 40, 225, 192))
        self.graphicsView_2.setObjectName("graphicsView_2")
        self.comboBox = QtWidgets.QComboBox(Dialog)
        self.comboBox.setGeometry(QtCore.QRect(103, 366, 78, 20))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox_2 = QtWidgets.QComboBox(Dialog)
        self.comboBox_2.setGeometry(QtCore.QRect(188, 366, 162, 20))
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(357, 362, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(Dialog)
        self.plainTextEdit.setGeometry(QtCore.QRect(14, 43, 225, 192))
        self.plainTextEdit.setPlainText("")
        self.plainTextEdit.setOverwriteMode(False)
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(62, 15, 24, 16))
        self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(710, 16, 60, 16))
        self.label_3.setObjectName("label_3")

        self.retranslateUi(Dialog)
        self.pushButton_2.clicked.connect(self.getgraph)
        self.pushButton.clicked.connect(self.runGA)

    def getgraph(self):
        self.graph_model = g.Graph_Model(self.plainTextEdit)
        self.graph_model.generateImg('input')
        pixmap = QPixmap(r'./process record/input.png')
        pixmap_item = QGraphicsPixmapItem(pixmap)
        # 创建场景和将图像项添加到场景
        scene = QtWidgets.QGraphicsScene()
        scene.addItem(pixmap_item)

        # 将场景设置到 graphicsView
        self.graphicsView.setScene(scene)

        # 如果需要，你可以调整视图大小以适应场景内容
        self.graphicsView.fitInView(scene.sceneRect(), QtCore.Qt.KeepAspectRatio)

    def runGA(self):
        current_text = self.comboBox_2.currentText()
        print(current_text)
        self.graph_model.RunGraphAlgorithm(current_text)
        self.graph_model.generateImg('output')
        pixmap = QPixmap(r'./process record/output.png')
        pixmap_item = QGraphicsPixmapItem(pixmap)
        # 创建场景和将图像项添加到场景
        scene = QtWidgets.QGraphicsScene()
        scene.addItem(pixmap_item)

        # 将场景设置到 graphicsView
        self.graphicsView_2.setScene(scene)

        # 如果需要，你可以调整视图大小以适应场景内容
        self.graphicsView_2.fitInView(scene.sceneRect(), QtCore.Qt.KeepAspectRatio)
        #
        if self.graph_model.output_Path is not None:
            self.textBrowser.setText("path矩阵：\n"+str(self.graph_model.output_Path))
            self.textBrowser.show()



    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.pushButton_2.setText(_translate("Dialog", "显示图"))
        self.label_2.setText(_translate("Dialog", "图的可视化"))
        self.comboBox.setItemText(0, _translate("Dialog", "一步到位"))
        self.comboBox.setItemText(1, _translate("Dialog", "逐步执行"))
        self.comboBox_2.setItemText(0, _translate("Dialog", "最小生成树Kruskal"))
        self.comboBox_2.setItemText(1, _translate("Dialog", "最小生成树Prime"))
        self.comboBox_2.setItemText(2, _translate("Dialog", "最小生成树破圈法"))
        self.comboBox_2.setItemText(3, _translate("Dialog", "最短路径Dijkstra"))
        self.comboBox_2.setItemText(4, _translate("Dialog", "最短路径Floyd"))
        self.comboBox_2.setItemText(5, _translate("Dialog", "最短路径Floyd-Warshall"))
        self.comboBox_2.setItemText(6, _translate("Dialog", "最大匹配匈牙利"))
        self.comboBox_2.setItemText(7, _translate("Dialog", "最优匹配Kuhn-Munkres"))
        self.pushButton.setText(_translate("Dialog", "确认"))
        self.plainTextEdit.setPlaceholderText(_translate("Dialog", "请以邻接矩阵形式输入图"))
        self.label.setText(_translate("Dialog", "输入"))
        self.label_3.setText(_translate("Dialog", "结果可视化"))
# import background_rc
